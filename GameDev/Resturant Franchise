class Business:

  def __init__(self, name, franchises):
    self.name = name
    self.franchises = franchises

class Franchise:

  def __init__(self, address, menus):
    self.address = address
    self.menus = menus
  
  def __repr__(self):
    return self.address

  def available_menus(self, time):
    available_menus= []
    for menu in self.menus:
      if time >= menu.start_time and time <= menu.end_time:
        available_menus.append(menu)
    return available_menus

class Menu:
  
  def  __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items
    self.start_time = start_time
    self.end_time = end_time

# creating a repr method for the name of the menu. remember that methods should only take in the self argument. 

  def __repr__(self):
    return self.name + "The menu is available from " + str(self.start_time) + " until " + str(self.end_time)


# creating a bill method

  def calculate_bill(self, purchased_items):
    
    bill = 0
    for purchased_item in purchased_items:
        if purchased_item in self.items:
          bill += self.items[purchased_item]
    return bill



# creating brunch variable for brunch object
brunch_items = {
  'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50
}

# creating brunch object
brunch_menu = Menu('Brunch', brunch_items, 1100, 1400)

# testing object 
#print(brunch_menu.name)
#print(brunch_menu.items)
#print(brunch_menu.start_time)
#print(brunch_menu.calculate_bill(['panckes', 'mimosa', 'espresso']))
#print('_________________________________')

# creating scrone brunch varible for second brunch object
early_bird = {
  'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00,
}

# creating seonc brunch object 
early_bird = Menu("Early Bird", early_bird, 1500, 1800)

# testing object 
#print(early_bird.items)
#print(early_bird.calculate_bill(['salumeria plate', 'vegan mushroom']))
#print("__________________________________")

# creathing 3rd menue variable for third object

dinner = {
  'crostini with eggplant caponata': 13.00, 'caesar salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00,
}

dinner = Menu('Dinner', dinner, 1700, 2300)

#print(dinner.start_time)
#print("__________________________________")


# last menu
kids = {
  'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00
}

kids = Menu("Kids", kids, 1100, 2100)
#print(kids.items)


# Franchise constructors and objects 

menus = [brunch_menu, early_bird, dinner, kids]

flagship_store = Franchise("1232 West End Road", menus)

new_installment = Franchise("12 East Mulberry Street", menus)


print(flagship_store.available_menus(1900))

# creating business
basta = Business('Basta Fazoolin'' with my heart', [flagship_store, new_installment])


# Arepa menu 

arepa_items = {
  'arepa pabellon': 7.00, 'pernil arepa': 8.50, 'guayanes arepa': 8.00, 'jamon arepa': 7.50
}

arepa_menu = Menu("Take a' Arepa", arepa_items,1000, 2000 )


arepa_place = Franchise("189 Fitzgerald Avenue", menus)

arepa = Business("Take a' Arepa", [arepa_place])

print(arepa.franchises[1])
